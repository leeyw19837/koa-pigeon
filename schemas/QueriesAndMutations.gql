# TODO(jan): Add a Date type and get rid of all the ...AtString parameters
scalar GraphQLDateTime

type Query {
  footAssessment(
    patientId: ID!
    healthCareTeamId: ID!
    day: String!
    timezone: String = "+0800"
    # Remove this, the time on the server is accurate, it's just set to GMT
    nowString: String = "1970-01-01T00:00:00.000Z"
  ): FootAssessment!
  footAssessments(patientId: ID!): [FootAssessment!]!
  treatmentState(
    patientId: ID!
    day: String
    timezone: String = "+0800"
  ): TreatmentState!
  treatmentStateApp(patientId: ID!): TreatmentStateApp!
  treatmentStates(
    day: String
    healthCareTeamId: ID!
    timezone: String = "+0800"
  ): [TreatmentState!]!
  photos(patientId: ID!, owner: String!): [Photo!]!
  chatMessages(appointmentId: ID!): ChatMessagesResponse!
  # Statistics
  totalTimeAtClinic: [DataPointNumberNumber!]!
  timeBetweenAppointments: [DataPointNumberNumberStdDev!]!
  activePatients: [DataPointNumberNumber!]!
  glucoseMeasurementTimeOfDay: [DataPointNumberNumberStdDev!]!
  # Users
  patient(patientId: ID, telephone: String): Patient
  patients(cdeId: ID): [Patient]
  patientsByStatus(status: String!): [Patient]
  healthCareProfessional(id: ID!): HealthcareProfessional
  healthCareProfessionals: [HealthcareProfessional]
  # Treatment plans
  treatmentPlan(patientId: ID!): [TreatmentPlan]
  # Measurements
  bloodGlucoseMeasurements(
    patientId: ID!
    from: Date
    to: Date
  ): [BloodGlucoseMeasurement]
  bloodGlucoseMeasurementsAndTreatmentPlans(
    patientId: ID!
    from: Date
    to: Date
  ): BloodGlucoseMeasurementsAndTreatmentPlans
  # Sms
  smses(currPage: Int!, size: Int!, mobile: String): SmsReponse
  fetchOrCreateNeedleChatRoom(userId: ID!): NeedleChatRoom!
  unreadMessages(userId: String!): UnReadMessage
  outreachs(period: String, startDay: Date): [Outreach]
  professionalLogin(
    username: String!
    password: String!
  ): HealthcareProfessional
  sentences(usedFor: Uses, authors: [String!]): [Sentence]
  # 化验结果 查体结果
  laboratoryExaminationResults(patientId: ID!): LaboratoryExamination
  warningsOfLow(period: String): [Warning]
  warningsOfHigh(period: String, rangeLow: Float, rangeHigh: Float): [Warning]
  getClinicalLabResult: [[ClinicalLabResult]]
  terribleMeasure: [Warning]
  latestCaseRecordBeforeDate(patientId: ID!, now: Date!): CaseRecord
  # 获取历史和下次预约信息
  appointmentsInformation(patientId: ID!): AppointmentInformation
  # 订单信息
  orders(patientId: ID!): [Order]
  # 新模板血糖测量作业
  bloodMeasurementPlans(patientId: ID!): BloodMeasurementPlans
  getDiagnoseType(
    bloodGlucoseValue: String
    patientId: ID
    measurementTime: String
    measuredAt: Date
    manualInputType: String
  ): DiagnoseType
  getPatientInstitution(patientId: ID): InstitutionType
  getUserUseBg1Situation(patientId: ID): UserUseBG1Schema
  getOrderReceiverInfo(patientId: ID!): Order
  getDiagnosticWords(
    diagnoseType: String
    bloodGlucoseValue: String
    bgValueBeforeMeal: String
    manualInputType: String
    patientId: String
    measuredAt: Date
    measurementTime: String
  ): DiagnosticWords
  # 月预约日历
  monthlyAppointments(
    monthStr: String
    healthCareTeamId: ID
  ): [DailyAppointment!]
  dailyOutpatients(healthCareTeamId: ID): [DailyOutpatients!]
  outpatient(id: ID): Outpatient
  certifiedDiabetesEducator(
    cdeId: ID
    assistantId: ID
  ): CertifiedDiabetesEducator
}

type Mutation {
  saveFootAssessment(
    recordId: ID!
    updatedAtString: String!
    assessmentDetailsJson: String!
    treatmentStateId: ID!
    footBloodAt: Boolean
    healthCareTeamId: ID!
  ): String
  savePhoto(
    patientId: ID!
    data: String!
    owner: String!
    note: String!
  ): Boolean!
  saveAssessmentTime(
    treatmentStateId: String!
    role: String!
    occurredAtString: String!
    action: String!
  ): Boolean!
  saveChatMessage(
    content: String!
    sentAtString: String!
    appointmentId: ID!
    senderNickname: String!
  ): Boolean!
  sendNeedleAudioChatMessage(
    userId: String!
    chatRoomId: ID!
    # The base64 encoded audio data. This gets turned into a URL on the server.
    base64EncodedAudioData: String!
  ): NeedleAudioMessage!
  # Posts an audio chat message to the given chat room.
  sendNeedleImageChatMessage(
    userId: String!
    chatRoomId: ID!
    # The base64 encoded audio data. This gets turned into a URL on the server.
    base64EncodedImageData: String!
  ): NeedleImageMessage!
  # Posts an text chat message to the given chat room.
  saveBloodGlucoseMeasurement(
    patientId: ID!
    bloodGlucose: BloodGlucoseInput!
    digestiveState: DigestiveState!
    measurementDeviceModel: DeviceModel!
    measuredAt: Date!
    deviceContext: DeviceContextInput!
  ): ID
  saveBloodGlucoseMeasurementNew(
    bloodGlucoseValue: Float
    bloodGlucoseDataSource: String
    inputType: String
    patientId: String
    measurementTime: String
    deviceInformation: DeviceContextInput
    measuredAt: Date
  ): ID
  sendNeedleTextChatMessage(
    userId: String!
    chatRoomId: ID!
    text: String!
    sourceType: String
  ): NeedleTextMessage!
  updateLastSeenAt(userId: String!, chatRoomId: ID!): Boolean!
  sendMobileVerificationCode(mobile: String!): Int!
  sendMobileVerificationCodeForWeb(mobile: String!): Int!
  saveCommunication(
    _id: ID
    patientId: ID!
    currentTopic: String!
    initiator: Roles!
    method: Method!
    nextTopic: String
    nextDate: Date
  ): Boolean!
  updateRemarkOfBloodglucoses(_id: ID!, remark: String): Boolean!
  updateRemarkOfBloodglucosesNew(
    _id: ID!
    remark: String
    updatedAt: Date
  ): Boolean!
  deleteOfBloodglucoses(_id: ID!): Boolean!
  logicalDeleteOfBloodglucoses(_id: ID!): Boolean!
  addSentence(
    category: SoapCategory!
    group: String!
    segment: SoapSegment!
    dependence: ID
    value: String!
    usedFor: Uses!
  ): Boolean!
  removeSentence(_id: ID!): Boolean!
  addOutHospitalSoap(
    subjective: String
    objective: String
    assessment: String
    plan: String
    severity: SeverityInput
    patientId: ID!
    nextCommunicationDate: Date
  ): Boolean
  updateOutHospitalSoap(
    _id: ID!
    subjective: String
    objective: String
    assessment: String
    plan: String
    severity: SeverityInput
    nextCommunicationDate: Date
  ): Boolean
  changeUsername(patientId: ID!, newUsername: String!): Boolean!
  updateBG1Reason(patientId: ID!, reason: String!): Boolean
  removeOutHospitalSoap(_id: ID!): Boolean
  addOrder(
    # 病人编号
    patientId: ID!
    #  订单编号
    orderId: ID!
    #  订单时间
    orderTime: Date
    #  订单状态 1：已经下单 2：其他
    orderStatus: Int
    #  收货人
    receiver: String
    #  联系电话
    phoneNumber: String
    #  收货地址
    receiveAddress: String
    #  商品类型： 1：iHealth血糖试纸 2：其他
    goodsType: Int
    #  商品单价
    goodsUnitPrice: Int
    #  商品规格
    goodsSpecification: String
    #  购买数量
    purchaseQuantity: Int
    #  运费
    freightPrice: Int
    #  总价
    totalPrice: Int
    source: String
  ): Boolean
  reportDevice(
    # 病人编号
    patientId: ID!
    # 设备品牌
    deviceBrand: String!
    # 设备型号
    deviceSystemVersion: String!
    # 设备系统版本
    deviceSystemName: String!
    # 上报日期
    reportDate: Date
  ): Boolean
  # 更新User的Device信息
  updateUserDevices(patientId: ID!, deviceContext: DeviceContextInput): Boolean
  # 记录Needle用户行为
  saveUserBehaviors(
    patientId: ID!
    eventName: String
    eventNumber: String
    sessionId: String
    deviceContext: DeviceContextInput
    occurredAt: Date
  ): Boolean
  addAppointment: Boolean
  changeChatCardStatus(
    messageId: ID!
    patientId: ID!
    dateType: String!
    operationType: String!
    outpatientTime: Date!
    recordId: String!
  ): Boolean
  updateBlogByType(
    blogId: String!
    batchData: BlogBatchDataInput!
    type: String!
    patientId: ID!
  ): Boolean
}

type Subscription {
  chatMessageAdded(chatRoomId: ID): NeedleChatMessage!
  chatRoomDynamics(userId: ID): NeedleChatRoom!
  warningAdded: Warning
}

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}
