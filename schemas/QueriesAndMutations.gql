# TODO(jan): Add a Date type and get rid of all the ...AtString parameters
scalar GraphQLDateTime

type Query {
  getQAList(approved: Int!, pageSize: Int!, pageIndex: Int!): QAListReponse!
  footAssessment(
    patientId: ID!
    healthCareTeamId: ID!
    day: String!
    timezone: String = "+0800"
    # Remove this, the time on the server is accurate, it's just set to GMT
    nowString: String = "1970-01-01T00:00:00.000Z"
  ): FootAssessment!
  footAssessments(patientId: ID!): [FootAssessment!]!
  treatmentState(
    patientId: ID!
    day: String
    timezone: String = "+0800"
  ): TreatmentState!
  treatmentStateApp(patientId: ID!): TreatmentStateApp!
  treatmentStates(
    day: String
    healthCareTeamId: ID!
    timezone: String = "+0800"
  ): [TreatmentState!]!
  photos(patientId: ID!, owner: String!): [Photo!]!
  chatMessages(patientId: ID!): ChatMessagesResponse!
  # Statistics
  totalTimeAtClinic: [DataPointNumberNumber!]!
  timeBetweenAppointments: [DataPointNumberNumberStdDev!]!
  activePatients: [DataPointNumberNumber!]!
  glucoseMeasurementTimeOfDay: [DataPointNumberNumberStdDev!]!
  # Users
  patient(patientId: ID, telephone: String, platform: String): Patient
  patients(cdeId: ID, healthCareTeamId: ID): [Patient]
  # do not use this API anymore, the one next to it is much better
  patientsHasCDE(
    nosy: Boolean
    cdeId: ID
    page: Int
    limit: Int
    nameFilter: String
  ): [Patient]
  # this is the much better one
  getSomePatients(
    filter: InputPatientFilter
    slice: InputSliceInfo
  ): PatientPagination
  patientsByStatus(status: String!): [Patient]
  healthCareProfessional(id: ID!): HealthcareProfessional
  healthCareProfessionals: [HealthcareProfessional]
  # Treatment plans
  treatmentPlan(patientId: ID!): [TreatmentPlan]
  # Measurements
  bloodGlucoseMeasurements(
    patientId: ID!
    from: Date
    to: Date
  ): [BloodGlucoseMeasurement]
  bloodGlucoseMeasurementsAndTreatmentPlans(
    patientId: ID!
    from: Date
    to: Date
  ): BloodGlucoseMeasurementsAndTreatmentPlans
  # Sms
  smses(currPage: Int!, size: Int!, mobile: String): SmsReponse
  fetchOrCreateNeedleChatRoom(userId: ID!): NeedleChatRoom!
  unreadMessages(userId: String!, client: String = "APP"): UnReadMessage
  outreachs(period: String, startDay: Date): [Outreach]
  professionalLogin(
    username: String!
    password: String!
  ): HealthcareProfessional
  sentences(usedFor: Uses, authors: [String!]): [Sentence]
  # 化验结果 查体结果
  laboratoryExaminationResults(patientId: ID!): LaboratoryExamination
  warningsOfLow(period: String): [Warning]
  warningsOfHigh(period: String, rangeLow: Float, rangeHigh: Float): [Warning]
  getClinicalLabResult: [[ClinicalLabResult]]
  terribleMeasure: [Warning]
  latestCaseRecordBeforeDate(patientId: ID!, now: Date!): CaseRecord
  # 获取历史和下次预约信息
  appointmentsInformation(patientId: ID!): AppointmentInformation
  # 订单信息
  orders(patientId: ID!): [Order]
  # 新模板血糖测量作业
  bloodMeasurementPlans(patientId: ID!): BloodMeasurementPlans
  getDiagnoseTypeNew(
    bloodGlucoseValue: String
    patientId: ID
    measurementTime: String
    measuredAt: Date
    manualInputType: String
  ): DiagnoseType
  getDiagnoseType(
    bloodGlucoseValue: String
    patientId: ID
    measurementTime: String
    measuredAt: Date
    manualInputType: String
  ): DiagnoseType
  getPatientInstitution(patientId: ID): InstitutionType
  getUserUseBg1Situation(patientId: ID): UserUseBG1Schema
  getOrderReceiverInfo(patientId: ID!): Order
  getDiagnosticWordsNew(
    bgRecordId: String
    diagnoseType: String
    bloodGlucoseValue: String
    bgValueBeforeMeal: String
    manualInputType: String
    patientId: String
    measuredAt: Date
    measurementTime: String
  ): DiagnosticWords
  getDiagnosticWords(
    diagnoseType: String
    bloodGlucoseValue: String
    bgValueBeforeMeal: String
    manualInputType: String
  ): DiagnosticWords
  # 月预约日历
  monthlyAppointments(
    monthStr: String
    healthCareTeamId: ID
  ): [DailyAppointment!]
  dailyOutpatients(healthCareTeamId: [ID]): [DailyOutpatients!]
  outpatient(id: ID): Outpatient
  certifiedDiabetesEducator(
    cdeId: ID
    assistantId: ID
  ): CertifiedDiabetesEducator
  # 照护师值班
  cdeForDuty: [CertifiedDiabetesEducatorForDuty]
  getInterventionTasks(
    cdeId: ID
    patientId: ID
    nosy: Boolean
  ): [InterventionTask!]
  getUnreadTask(patientId: ID, type: String): Int
  getGroupedInterventionTasks(
    cdeId: ID
    nosy: Boolean
  ): [InterventionTaskCount!]
  getTaskSoapCorpus: [TaskSoapCorpus!]

  getFoodRecords(patientId: ID, cdeId: ID): [Foods]
  getSpecifiedFoodRecord(foodCircleId: String): Foods
  getTaskSoap(taskId: ID): TaskSoap
  getAlipay(out_trade_no: String!, goodId: String!, patientId: String): Alipay
  getGoods(goodId: ID, goodType: String): Goods
  getAllGoods: [Goods]
  getEntityGoods: [Goods]
  # 不要再继续使用这个API，用getSomeChatRooms代替
  getChatrooms(
    nosy: Boolean
    cdeId: ID
    page: Int
    limit: Int
    chatRoomId: ID
  ): [NeedleChatRoom!]
  # 对，用这个
  getSomeChatRooms(
    filter: InputChatRoomFilter
    slice: InputSliceInfo
  ): ChatRoomPagination
  queryAIContentTypes: [AIContentTypeOption]
  getUnreadFoodBadges(patientId: ID): [BadgeRecords]
  # achievement(
  #   patientId: ID!
  #   achievementType: String
  #   queryType: String
  # ): Achievement
  getSessions(chatRoomId: ID): [Session]
  cdeDutyAdjective: [String]
  cdeDutyPeopleperDay: Int!
  fetchChatSnapshots(qaId: ID!): QAAddition
  getTakeMedicineList(
    healthCareTeamId: ID!
    outpatientDate: String!
  ): [TakeMedicinePeople]
  getCheckByTreatmentId(treatmentStateId: ID!): Appointment

  # 购物车
  getShoppingCartGoods(patientId: ID): [ShoppingCart]

  # 获取就诊医生
  getOutpatientModules(hospitalId: String): [OutpatientModules]
  # 获取前端配置
  configurationContent(type: String!): ConfigurationContent

  # 查询用户的活动配置信息
  getPublicityActivityController(patientId: ID): PublicityActivityController

  # 根据活动的ID查询当前的活动
  getOneOfPublicityActivity(activityId: String): Activity

  # app 常见问题
  getCommonProblem:[CommonProblem]

}

type Mutation {
  uploadMultiAssessmentFoots(
    healthCareTeamId: ID!
    role: String
    assessmentDetailsJsons: String!
  ): String
  saveFootAssessment(
    recordId: ID!
    updatedAtString: String!
    assessmentDetailsJson: String!
    treatmentStateId: ID!
    footBloodAt: Boolean
    healthCareTeamId: ID!
  ): String
  savePhoto(
    patientId: ID!
    data: String!
    owner: String!
    note: String!
  ): Boolean!
  saveAssessmentTime(
    treatmentStateId: String!
    role: String!
    occurredAtString: String!
    action: String!
  ): Boolean!
  saveChatMessage(
    content: String!
    sentAtString: String!
    patientId: ID!
    senderNickname: String!
  ): Boolean!
  sendNeedleAudioChatMessage(
    userId: String!
    chatRoomId: ID!
    # The base64 encoded audio data. This gets turned into a URL on the server.
    base64EncodedAudioData: String!
    actualSenderId: ID
    nosy: Boolean
  ): NeedleAudioMessage!
  # Posts an audio chat message to the given chat room.
  sendNeedleImageChatMessage(
    userId: String!
    chatRoomId: ID!
    # The base64 encoded audio data. This gets turned into a URL on the server.
    base64EncodedImageData: String!
    sourceType: String
    actualSenderId: ID
    nosy: Boolean
  ): NeedleImageMessage!
  # Posts an text chat message to the given chat room.
  saveBloodGlucoseMeasurement(
    patientId: ID!
    bloodGlucose: BloodGlucoseInput!
    digestiveState: DigestiveState!
    measurementDeviceModel: DeviceModel!
    measuredAt: Date!
    deviceContext: DeviceContextInput!
  ): ID
  saveBloodGlucoseMeasurementNew(
    bloodGlucoseValue: Float
    bloodGlucoseDataSource: String
    inputType: String
    patientId: String
    measurementTime: String
    deviceInformation: DeviceContextInput
    measuredAt: Date
  ): ID
  sendNeedleTextChatMessage(
    userId: String!
    chatRoomId: ID!
    text: String!
    sourceType: String
    bgRecordId: String
    messagesPatientReplyFlag: String
    actualSenderId: ID
    nosy: Boolean
  ): NeedleTextMessage!
  sendNeedleBubbleChatMessage(
    userId: String!
    chatRoomId: ID!
    text: String!
    sourceType: String
    taskType: String
    actualSenderId: ID
    nosy: Boolean
  ): NeedleBubbleMessage!
  updateLastSeenAt(userId: String!, chatRoomId: ID!): Boolean!
  sendMobileVerificationCode(mobile: String!): Int!
  sendMobileVerificationCodeForWeb(mobile: String!): Int!
  saveCommunication(
    _id: ID
    patientId: ID!
    currentTopic: String!
    initiator: Roles!
    method: Method!
    nextTopic: String
    nextDate: Date
  ): Boolean!
  updateRemarkOfBloodglucoses(_id: ID!, remark: String): Boolean!
  updateRemarkOfBloodglucosesNew(
    _id: ID!
    remark: String
    updatedAt: Date
  ): Boolean!
  deleteOfBloodglucoses(_id: ID!): Boolean!
  logicalDeleteOfBloodglucoses(_id: ID!): Boolean!
  addSentence(
    category: SoapCategory!
    group: String!
    segment: SoapSegment!
    dependence: ID
    value: String!
    usedFor: Uses!
  ): Boolean!
  removeSentence(_id: ID!): Boolean!
  addOutHospitalSoap(
    subjective: String
    objective: String
    assessment: String
    plan: String
    severity: SeverityInput
    patientId: ID!
    nextCommunicationDate: Date
  ): Boolean
  updateOutHospitalSoap(
    _id: ID!
    subjective: String
    objective: String
    assessment: String
    plan: String
    severity: SeverityInput
    nextCommunicationDate: Date
  ): Boolean
  changeUsername(patientId: ID!, newUsername: String!): Boolean!
  updateBG1Reason(patientId: ID!, reason: String!): Boolean
  removeOutHospitalSoap(_id: ID!): Boolean
  addOrder(
    # 病人编号
    patientId: ID!
    #  订单编号
    orderId: ID!
    #  订单时间
    orderTime: Date
    #  订单状态 1：已经下单 2：其他
    orderStatus: Int
    #  收货人
    receiver: String
    #  联系电话
    phoneNumber: String
    #  收货地址
    receiveAddress: String
    #  商品类型： 1：iHealth血糖试纸 2：其他
    goodsType: Int
    #  商品单价
    goodsUnitPrice: Int
    #  商品规格
    goodsSpecification: String
    #  购买数量
    purchaseQuantity: Int
    #  运费
    freightPrice: Int
    #  总价
    totalPrice: Int
    source: String
  ): Boolean
  createPayOrder(patientId: ID!, totalPrice: Int): OrderCBResult
  createOrder(
    # 病人编号
    patientId: ID!
    #  商品ID
    goodId: ID
    #  购买数量
    purchaseQuantity: Int
    source: String
    # 购买的商品详情（一个订单可能包含多件商品）
    goodsList: [GoodsTypeForMutation]
    # 购买的商品类型
    goodsType: String
    # 购买的实物商品收货信息
    goodsReceiverInfos: GoodsReceiverInfos
    # 购买的方式
    buyWay: String
  ): Order
  createPrepayForWechat(
    patientId: ID!
    # 订单ID
    orderId: ID!
    # 商品ID
    goodId: ID!
  ): OrderCBResult
  checkPayOrderStatus(orderId: ID!, type: String): PayOrder
  reportDevice(
    # 病人编号
    patientId: ID!
    # 设备品牌
    deviceBrand: String!
    # 设备型号
    deviceSystemVersion: String!
    # 设备系统版本
    deviceSystemName: String!
    # 上报日期
    reportDate: Date
  ): Boolean
  # 更新User的Device信息
  updateUserDevices(patientId: ID!, deviceContext: DeviceContextInput): Boolean
  # 记录Needle用户行为
  saveUserBehaviors(
    patientId: ID!
    eventName: String
    eventNumber: String
    sessionId: String
    deviceContext: DeviceContextInput
    occurredAt: Date
  ): Boolean
  # 更新【重新申请加入照护组】状态
  updateUserArchiveState(patientId: ID!, reapplyStatus: String): Boolean
  addAppointment: Boolean
  changeChatCardStatus(
    messageId: ID!
    patientId: ID!
    dateType: String!
    operationType: String!
    outpatientTime: Date!
    recordId: String!
  ): Boolean
  updateBlogByType(
    blogId: String!
    batchData: BlogBatchDataInput!
    type: String!
    patientId: ID!
  ): Boolean
  saveTaskSoap(soap: TaskSoapInput!, _id: ID): Boolean
  addFoodComments(
    foodCircleId: ID
    commentContent: String
    authorId: ID
    authorName: String
    replyId: ID
    replyName: String
    type: String
    commentIds: [ID]
  ): Boolean!
  deleteFoodComments(_id: ID!): Boolean!
  saveFoodContents(
    patientId: String!
    circleContent: String!
    circleImageBase64: [String]
    measurementTime: String!
    measuredAt: Date!
    foodUploadSourceType: String
    commentContent: CommentInput
  ): Boolean
  checkAlipayOrder(out_trade_no: String!): AliPayOrder
  updateFoodScore(
    _id: ID!
    scores: FoodsScoreInput!
    comment: CommentInput
  ): Boolean
  saveFoodComments(comment: CommentInput!): Boolean!
  updateInterventionTaskState(_id: ID!, state: InterventionTaskState!): Boolean!
  updateOrder(orderId: ID!, setData: OrderSetDataInput): Boolean
  updateOrderList(orderId: ID!, setData: OrderSetDataInput): Boolean
  glycatedHemoglobinAchieve(patientId: ID!): Alipay
  updateFoodBadgeReadState(badgeId: ID): Boolean
  setFoodBadgeState(badgeIds: [ID], badgeState: String): Boolean
  addSharing(
    achievementRecordId: ID!
    shareWay: String!
    shareStatus: String!
    shareType: String
  ): String
  changeAchieveShowStatus(patientId: ID!): Boolean
  sharingConfirm(shareId: ID!, confirmStatus: String!): Boolean
  addCommonSharing(
    patientId: ID!
    shareType: String
    recordId: ID!
    shareWay: String!
    shareStatus: String!
  ): String
  finishSession(chatRoomId: ID!, operatorId: ID): Boolean
  updateContentType(messageId: ID!, contentType: String!): NeedleTextMessage
  updateTag(
    type: String!
    title: String
    tagId: ID
    parentId: ID
    operator: ID
  ): Boolean
  retrainQA(q: String!, a: String!): Boolean
  saveNewQA(
    q: String!
    a: String!
    msgId: ID!
    cdeId: ID!
    cdeName: String!
  ): Boolean
  updateAssessment(
    assessmentId: ID!
    value: String
    tagIds: [String]
    operator: ID
    status: String
  ): Boolean
  # 修改照护师值班时间段
  updateCdeDutyStopPeriod(userId: String!, stopPeriod: String!): Boolean
  # 修改每天照护师值班人数
  updateCdeDutyPeopleperDay(dutyPeopleperDay: Int!): Boolean
  # 修改照护师形容词
  updateCdeDutyAdjective(adjective: [String]!): Boolean
  # 更新待预约信息（姓名/电话/...）
  updateAppointmentInfos(
    patientId: ID
    nickname: String
    mobile: String
    source: ID
    expectedTime: Date
    note: String
  ): Boolean
  # 更新待预约详情信息（病历号/检查项目）
  updateAppointmentDetailInfos(
    patientId: ID
    hisNumber: String
    blood: Boolean
    footAt: Boolean
    eyeGroundAt: Boolean
    insulinAt: Boolean
    nutritionAt: Boolean
    healthTech: Boolean
    quantizationAt: Boolean
  ): Boolean
  # 删除待预约信息
  deletePatientAppointment(patientId: ID): Boolean
  # 新增待预约信息
  addPatientAppointment(
    willAttendToday: Boolean
    currentOutPatientId: ID
    institutionId: String
    nickname: String
    expectedTime: Date
    hisNumber: String
    source: ID
    mobile: String
    blood: Boolean
    footAt: Boolean
    eyeGroundAt: Boolean
    insulinAt: Boolean
    nutritionAt: Boolean
    healthTech: Boolean
    quantizationAt: Boolean
    note: String
  ): AppointmentResult
  updateOutpatientStates(
    patientId: ID
    appointmentTime: Date
    outpatientId: ID
  ): String
  updateOutpatientInfos(
    outpatientId: String
    state: String
    outpatientDate: Date
    outpatientPeriod: String
    doctorId: String
  ): Boolean
  # 更新问答状态
  updateQAStatus(
    qaId: ID!
    approved: Int!
    approvedUser: String!
    approvedUserId: ID!
  ): Boolean
  # 问答审核通过，并推送给天津
  updateQAtoAI(
    qaId: ID!
    q: String!
    a: String!
    approvedUser: String!
    approvedUserId: ID!
  ): Boolean
  # 修改患者信息
  updatePatientProfile(patientId: ID!, profile: ProfileInput!): Boolean
  updateBloodGlucoses(bgId: ID!, dataStatus: String, mTime: String): Boolean

  # 签到前首先检查是否录入了身份证信息和地址信息
  updateUserIdentificationInfos(
    patientId: ID
    userIdentificationInfos: UserIdentificationInfos
  ): Boolean

  # 撤回消息
  withdrawMessage(messageId: ID!, userId: ID!): Boolean

  # 添加BG1未使用原因
  addBG1NotUseReason(
    patientId: ID!
    isUseBG1: Boolean!
    isGotBG1: Boolean
    reason: String
    isOutpatientCompare: String
    compareResult: String
    bloodValue: String
    BG1Value: String
    isContinueUse: String
    operatorId: ID
    operatorName: String
  ): Boolean
  setArchived(
    patientId: ID!
    archivedReason: String
    archivedInfo: ArchivedInfoMutation!
  ): Boolean
  unsetArchived(
    patientId: ID!
    outpatientId: ID
    appointmentTime: Date
  ): Boolean
  addTakeMedicinePatient(patientId: ID!): Boolean
  removeTakeMedicinePatient(itemId: ID!): Boolean
  editTakeMedicinePatient(itemId: ID!, patientId: ID!): Boolean

  # 更新购物中的商品数量（增/减）
  updateGoodsFromShoppingCart(
    patientId: ID
    goodsId: ID
    isAdd: Boolean
  ): Boolean

  # 删除购物中的商品
  deleteGoodsFromShoppingCart(patientId: ID, goodsIds: [ID]): Boolean

  # 为货到付款的订单创建pay history
  createPayHistory(patientId: ID, orderId: String, payWay: String): Boolean
  updateOffLineTeach(
    treatmentId: ID!
    offLineTeach: [OffLineTeachInput]!
  ): Boolean
  createPayHistory(patientId: ID, orderId: String, payWay: String): Boolean
  uploadFoodPhoto(
    circleImages: [String]
    invokerName: String
    measurementTime: String
  ): UploadFoodPhotoResult
  markReadPublicityActivity(patientId: ID, activityId: ID): Boolean
  updateUserHeadImage(
    patientId: String!
    headImageBase64: String!
  ): String
  saveAddress(address: AddressInput): Boolean
  removeAddress( _id: ID!): Boolean
  updateUserLocalCity(
    patientId: String!
    city: String!
  ): Boolean
}

type Subscription {
  chatMessageAdded(chatRoomId: ID, client: String): NeedleChatMessage!
  chatMessageUpdated(chatRoomId: ID, client: String): NeedleChatMessage!
  chatRoomDynamics(userId: ID, nosy: Boolean, chatRoomId: ID): NeedleChatRoom!
  treatmentDynamics(outpatientId: ID): TreatmentState!
  warningAdded: Warning
  interventionTaskDynamics(
    cdeId: ID
    patientId: ID
    nosy: Boolean
    type: InterventionTaskType
  ): InterventionTask
  foodDynamics(patientId: ID, client: String): Foods
  sessionDynamics(userId: ID, nosy: Boolean, chatRoomId: ID): Session
}

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}
