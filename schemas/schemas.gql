scalar Date
scalar JSON

type Patient {
  name: String!
}

type Appointment {
  date: String!
}

# type TreatmentSt

type Blood {

  

  conclusion: String

  ABILeft: Float
  ABIRight: Float
  TBILeft: Float
  TBIRight: Float
}

type NerveSymptoms {
  pain: Boolean
  numbness: Boolean
  paresthesia: Boolean
}

enum SENSITIVITY {
  NORMAL,
  NUMBNESS,
  PAIN,
}

type Nerve {
  symptomsPresent: Boolean
  symptoms: NerveSymptoms!

  pressureSenseLeft: Boolean
  pressureSenseRight: Boolean
  vibrationSenseLeft: Boolean
  vibrationSenseRight: Boolean
  temperatureSenseLeft: Boolean
  temperatureSenseRight: Boolean
  ankleReflexLeft: Boolean
  ankleReflexRight: Boolean

  leftArmSensitivity: SENSITIVITY
  rightArmSensitivity: SENSITIVITY
  leftLegSensitivity: SENSITIVITY
  rightLegSensitivity: SENSITIVITY

  hasDoneSomatesthesiaCheck: Boolean
  needsSomatesthesiaCheck: Boolean
}

type ShoeTypes {
  flipFlops: Boolean!
  # ...
}

type FootwearQuestions {
  question1: Boolean
  question2: Boolean
  question3: Boolean
  question4: Boolean
  question5: Boolean
  question6: Boolean
  question7: Boolean
  question8: Boolean
  question9: Boolean
  question10: Boolean
  question11: Boolean
  question12: Boolean
  question13: Boolean
  question14: Boolean
  question15: Boolean
}

type FootAssessment {
  id: ID!
  patient: Patient!

  blood: Blood!
  nerve: Nerve!
  footwearQuestions: FootwearQuestions!
  footwearSelection: ShoeTypes!
}

type Query {
  appointments: [Appointment]
}

schema {
  query: Query
}