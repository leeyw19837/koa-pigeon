type Patient {
  _id: ID
  nickname: String
  username: String
  gender: String
  dateOfBirth: String
  diabetesType: String
  startOfIllness: String
  avatar: String
  needleChatRoom: NeedleChatRoom
  footAssessmentPhotos: [Photo]
  closestAppointment: Appointment
  communications: [Communication]
  height: String
  weight: String
  targetWeight: String
  idCard: String
  createdAt: Date
  preYearApTime: Date
  patientState: String
  district: String
  caseRecords(limit: Int): [CaseRecord]
  remarks: String
  soaps: [SOAP]
  outHospitalSoaps: [SOAP]
  healthCareTeam: [HealthCareTeam]
  healthCareTeamId: [String]
  institutionId: String
  appointments: [Appointment]
  lastAppointment: Appointment
  lastCheckAppointment: Appointment
  useIGluco: Boolean
  useNeedle: Boolean
  isUseBg1: Boolean
  notUseBg1Reason: String
  useSPT: Boolean
  usePublicNumber: Boolean
  isLiDocter: Boolean
  tempFilter: Boolean
  lastHbAlc: String
  bloodGlucoses(startAt: Date, endAt: Date, limit: Int): [BloodGlucoseRecord]
  bloodGlucosesByTime(selectTime:Date): [BloodGlucoseRecord]
  cdeInfo: CertifiedDiabetesEducator
  doctorInfo: User
  # 模组完成度
  MCR: Int
  clinicalLabResults: [ClinicalLabResult!]
  yearServiceOrder: Order
  yearServiceStatus(platform: String): Boolean
  achievements: [Achievement]
  achievementRecords(achievementId: ID): [AchievementRecord]
  achievementResult(achievementId: ID): [AchievementResult]
  achievementShownRecords: [AchievementRecord]
  bonusPoints: [BonusPoint!]
  # 模组（Needle/健康模块/自测要求/自测方案）
  selfTestSchemes: SelfTestSchemes
  # 控糖目标（Needle/健康模块/自测要求/控糖目标）
  sugarControlGoals: CaseRecord
  # 用户基本信息（Needle/健康模块/基本信息）
  healthInformation: HealthInformation
  predictionA1c: String
}

enum Gender {
  male
  female
}

input ProfileInput {
  nickname: String
  gender: Gender
  height: Int
  weight: Int
  username: String
}
