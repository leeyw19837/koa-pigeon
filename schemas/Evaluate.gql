type Evaluate {
  _id: ID
  patientId: ID
  inValue: String
  nickname: String
  category: String
  a1cForecast: String
  a1cLatest: String
  measureCount: String
  doctors: String
  nextConsultationMin: String
  nextConsultationMax: String
}

#
# type ForecaseDetail {
#   _id: ID
#   caclDay: String
#   actualDay: Date
#   inValue: Int
#   fcInValue: Int
#   a1cGood: Int
#   fcA1cGood: Int
#   inMgtPatients: Int
#   fcInMgtPatients: Int
#   a1cPercent: String
#   inMgtPercent: String
#   liAngPatients: Int
# }

type ForecaseDetail {
  inValue: Int
  a1cGood: Int
  a1cGoodPercent: String
  inMgt: Int
  inMgtPercent: String
  activePatient: Int
}

extend type Query {
  fetchEvaluate(selectedDay: String!): [Evaluate]
  getOrderedDays: [String]
  fetchForecaseDetail(selectedDay: String): ForecaseDetail
}
